@page "/cv-import"
@inject ISnackbar Snackbar
@inject IWebHostEnvironment Env

<PageTitle>Technical skills from CV</PageTitle>

<div hidden="@false">
    <AIConfigCheckerComponent TitleIsHidden="false" IsConfigured="AiConfigResult" />
</div>

<div class="d-flex flex-column flex-grow-1 gap-4">
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-4">
        <MudTabPanel Text="Drag and drop">
            <MudForm @ref="_form">
                <MudStack Style="width: 100%" Spacing="0">
                    <MudFileUpload T="IBrowserFile"
                                   @ref="@_fileUpload"
                                   OnFilesChanged="OnInputFileChanged"
                                   Hidden="@false"
                                   InputClass="absolute mud-width-full mud-height-full overflow-hidden z-10"
                                   InputStyle="opacity:0"
                                   tabindex="-1"
                                   @ondrop="@ClearDragClass"
                                   @ondragenter="@SetDragClass"
                                   @ondragleave="@ClearDragClass"
                                   @ondragend="@ClearDragClass">
                        <ActivatorContent>
                            <MudPaper Height="200"
                                      Outlined="true"
                                      Class="@_dragClass" Style="display: flex; justify-content: center; align-items: center;">
                                <MudStack Spacing="4">
                                    @if (_selectedFile == null)
                                    {
                                        <div class="d-flex flex-column align-center justify-center mud-height-full">
                                            <MudText Align="Align.Center" Typo="Typo.subtitle1">
                                                Drag and drop or click to pick a PDF
                                            </MudText>
                                            <MudIcon Icon="@Icons.Material.Filled.CloudUpload" Size="Size.Large" Class="mr-2" />
                                        </div>
                                    }
                                    else
                                    {
                                        <MudChip T="string"
                                                 Color="Color.Info"
                                                 Variant="Variant.Outlined"
                                                 Text="@_selectedFile.Name"
                                                 Size="Size.Large"
                                                 tabindex="-1" />

                                        <MudText Typo="Typo.caption" hidden="@false">
                                            Size : @FormatFileSize(_selectedFile.Size)
                                        </MudText>
                                    }
                                </MudStack>
                            </MudPaper>
                        </ActivatorContent>
                    </MudFileUpload>

                    <MudToolBar Gutters="@false"
                                Class="relative d-flex justify-end gap-4">
                        <MudButton Color="Color.Primary"
                                   OnClick="@OpenFilePickerAsync"
                                   Variant="Variant.Filled">
                            Pick
                        </MudButton>
                        <MudButton Color="Color.Success"
                                   Disabled="@(_selectedFile is null || !SemanticIsConfigured)"
                                   OnClick="@Upload"
                                   Variant="Variant.Filled">
                            Upload
                        </MudButton>
                        <MudButton Color="Color.Error"
                                   Disabled="@(_selectedFile is null)"
                                   OnClick="@ClearAsync"
                                   Variant="Variant.Filled">
                            Clear
                        </MudButton>
                    </MudToolBar>
                </MudStack>
            </MudForm>

            <MudProgressLinear Color="Color.Info" Indeterminate="true" Class="mt-4" Style="height: 4px"
                               hidden="@(!_isProcessing)" />
        </MudTabPanel>

        <MudTabPanel Text="Select saved CV">
            <MudText Typo="Typo.h5" Class="mb-4">List of available CVs</MudText>

            <MudGrid>
                @foreach (var file in PdfFiles)
                {
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        @if (_loading)
                        {
                            <MudCard Style="cursor: pointer;">
                                <MudCardContent>
                                    <MudText Typo="Typo.subtitle1">@file?.Replace("_", " ").ToString()</MudText>
                                    <MudProgressLinear Color="Color.Info" Indeterminate="true" Class="mt-4" Style="height: 4px"
                                                       hidden="@(file != _fileName)" />
                                </MudCardContent>
                            </MudCard>
                        }
                        else
                        {
                            <MudCard Style="cursor: pointer;" @onclick="() => LoadCv(file)">
                                <MudCardContent>
                                    <MudText Typo="Typo.subtitle1">@file?.Replace("_", " ").ToString()</MudText>
                                </MudCardContent>
                            </MudCard>
                        }
                    </MudItem>
                }
            </MudGrid>
        </MudTabPanel>
    </MudTabs>

    @if (CVSkills.Count > 0)
    {
        <MudPaper Class="pa-4" Elevation="4">
            <MudText Typo="Typo.h5">@CVSkills.First().EmployeeName</MudText>

            <MudTable T="AICurriculumSkill" Items="@CVSkills" Dense="false" Hover="true" Bordered="false" Striped="false">
                <HeaderContent>
                    <MudTh>
                        <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<AICurriculumSkill, object>(x => x.SkillName!)">
                            Skill name
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<AICurriculumSkill, object>(x => x.SkillComplexity!)">
                            Skill complexity
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<AICurriculumSkill, object>(x => x.LastUsed)">
                            Last used
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<AICurriculumSkill, object>(x => x.RetentionRate)">
                            Retention rate
                        </MudTableSortLabel>
                    </MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Skill name">@context.SkillName</MudTd>
                    <MudTd DataLabel="Skill complexity">@context.SkillComplexity</MudTd>
                    <MudTd DataLabel="Skill complexity">@context.LastUsed.ToShortDateString()</MudTd>
                    <MudTd DataLabel="Skill complexity">@context.RetentionRate.ToString("P2")</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[] { 5, 10, 20, 50 }"
                                   RowsPerPageString="Row per page" />
                </PagerContent>
            </MudTable>
        </MudPaper>
    }
</div>


