<MudPaper Class="pa-4" Elevation="4">
    @if (Strategies?.Any() == true)
    {
        <MudText Typo="Typo.h4" Class="mb-6" Color="Color.Primary">
            <MudIcon Icon="Icons.Material.Filled.Groups" Class="mr-2" />
            Best internal candidates (@Strategies.Sum(s => s.Results.Count(x => x.Score > MinimumScore)) total candidates)
        </MudText>

        <MudExpansionPanels Elevation="2" Class="rounded-lg">
            @foreach (var strategy in Strategies.OrderBy(s => s.JobTitle))
            {
                var averageScore = strategy.Results.Any() ? strategy.Results.Average(r => r.Score) : 0;
                var topCandidate = strategy.Results.OrderByDescending(r => r.Score).Where(x => x.Score > MinimumScore).FirstOrDefault();
                var nbCandidats = strategy.Results.Count(x => x.Score > MinimumScore);

                <MudExpansionPanel Disabled="@(nbCandidats == 0)">
                    <TitleContent>
                        <div class="d-flex align-center justify-space-between" style="width: 100%;">
                            <div class="d-flex align-center">
                                <MudIcon Icon="Icons.Material.Filled.Work" Class="mr-3" Color="Color.Primary" />
                                <div>
                                    <MudText Typo="Typo.h6" Class="font-weight-bold">@strategy.JobTitle</MudText>
                                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                                        @nbCandidats candidate@(nbCandidats > 1 ? "s" : "")
                                    </MudText>
                                </div>
                            </div>

                            <div class="d-flex align-center gap-4">
                                @if (topCandidate != null)
                                {
                                    <MudChip T="StrategyCandidates" Size="Size.Medium" Color="Color.Success" Variant="Variant.Filled">
                                        <MudIcon Icon="Icons.Material.Filled.Star" Size="Size.Small" Class="mr-1" />
                                        Best: @topCandidate.EmployeeName
                                    </MudChip>
                                }

                                <MudProgressCircular Value="@(averageScore * 100)"
                                                     Size="Size.Medium"
                                                     Color="@GetScoreColor(averageScore)"
                                                     Class="ma-2">
                                    <MudText Typo="Typo.caption" Class="font-weight-bold">
                                        @($"{averageScore:P0}")
                                    </MudText>
                                </MudProgressCircular>
                            </div>
                        </div>
                    </TitleContent>

                    <ChildContent>
                        <CandidatSkillsMatchedVisualizer Results="strategy.Results.Where(x => x.Score > MinimumScore).ToList()" />
                    </ChildContent>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
    }
    else
    {
        <MudAlert Severity="Severity.Info" Class="mb-4">
            <MudText>No candidate data available.</MudText>
        </MudAlert>
    }
</MudPaper>

<style>
    .candidate-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        border-radius: 12px;
    }

        .candidate-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .skill-chip {
        font-size: 0.75rem;
        height: 24px;
    }

    .mud-expansion-panel-header {
        padding: 16px 24px;
    }

    .mud-progress-circular-svg {
        filter: drop-shadow(0 2px 4px rgba(0,0,0,0.1));
    }
</style>